version: '3.8'

services:
  backend:
    build: ./backend
    container_name: salesvision-backend
    environment:
      - SUPABASE_URL=${SUPABASE_URL}
      - SUPABASE_ANON_KEY=${SUPABASE_ANON_KEY}
      - SUPABASE_SERVICE_ROLE_KEY=${SUPABASE_SERVICE_ROLE_KEY}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - OPENAI_TIMEOUT_SECONDS=${OPENAI_TIMEOUT_SECONDS}
      - STRIPE_SECRET_KEY=${STRIPE_SECRET_KEY}
      - STRIPE_WEBHOOK_SECRET=${STRIPE_WEBHOOK_SECRET}
      - JWT_SECRET_KEY=${JWT_SECRET_KEY}
      - JWT_ALGORITHM=${JWT_ALGORITHM}
      - JWT_ACCESS_TOKEN_EXPIRE_MINUTES=${JWT_ACCESS_TOKEN_EXPIRE_MINUTES}
      - SITE_URL=${SITE_URL}
      - DOMAIN=${DOMAIN}
      - FROM_EMAIL=${FROM_EMAIL}
      - STORAGE_INVOICE_BUCKET=${STORAGE_INVOICE_BUCKET}
      - RATE_LIMIT_USAGE=${RATE_LIMIT_USAGE}
      - ENABLE_DRIVE=${ENABLE_DRIVE}
      - GOOGLE_SERVICE_ACCOUNT_JSON=${GOOGLE_SERVICE_ACCOUNT_JSON}
      - ENABLE_SAP=${ENABLE_SAP}
      - ENABLE_HUBSPOT=${ENABLE_HUBSPOT}
      - WEBHOOK_TOKEN=${WEBHOOK_TOKEN}
      - LOG_FILE=/logs/system.log
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/app
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  nginx:
    build: ./nginx
    container_name: salesvision-nginx
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - backend
    environment:
      - DOMAIN=${DOMAIN}
    restart: unless-stopped

  # Optional: Add a database service if not using Supabase
  # postgres:
  #   image: postgres:15-alpine
  #   container_name: salesvision-postgres
  #   environment:
  #     - POSTGRES_DB=salesvision
  #     - POSTGRES_USER=salesvision
  #     - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
  #   volumes:
  #     - postgres_data:/var/lib/postgresql/data
  #   ports:
  #     - "5432:5432"
  #   restart: unless-stopped

volumes:
  postgres_data:

